{"ast":null,"code":"var _jsxFileName = \"/home/sirius/project/site/Resume/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Header } from './Header/Header';\nimport { Sidebar } from './Sidebar/Sidebar';\nimport { Footer } from './Footer/Footer'; // import {WrapperTask} from './WrapperTask/WrapperTask'\n\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState(false); //состояние темы - режим темный/темный по умолчанию (theme=false)\n\n  const [menu, setMenu] = useState(false); // состояние меню - скрыто по умолчанию (menu=false)\n\n  let [numberTask, setNumberTask] = useState(0); // количество задач пользователя\n  // отвечает за сменю надписи на button смены режима\n\n  const handleOnClickTheme = event => {\n    if (event.target.textContent === \"Light theme\" || \"Dark theme\") setTheme(!theme);\n  }; // показывает/закрывает панель меню\n\n\n  const handleCallMenu = event => {\n    setMenu(!menu);\n  };\n  /*\n   *  для меню -  выводит общее количество задач\n   *  реализую паттерн передачи данных между дочерними\n   * компонентами через общий дочерний компонент\n   */\n\n\n  const handleNumberTask = number => {\n    setNumberTask(numberTask = number);\n  };\n\n  let cssApp = theme ? \"App App_Light\" : \"App App_Dark\";\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      handleOnClickTheme,\n      theme,\n      handleCallMenu,\n      menu,\n      handleNumberTask,\n      numberTask\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cssApp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"10vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"79.5vh\",\n          padding: \"0 0\",\n          flexWrap: \"nowrap\",\n          position: \"relative\",\n          overflowY: \"scroll\"\n        },\n        children: menu && /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"10vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ticxkdkkXnN+uxE0UfIjzMmpz20=\");\n\n_c = App;\nexport default App;\nApp.propsTypes = {\n  handleOnClickTheme: PropTypes.func,\n  handleCallMenu: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sirius/project/site/Resume/app/src/App.js"],"names":["React","useState","Header","Sidebar","Footer","PropTypes","AppContext","createContext","App","theme","setTheme","menu","setMenu","numberTask","setNumberTask","handleOnClickTheme","event","target","textContent","handleCallMenu","handleNumberTask","number","cssApp","width","height","padding","flexWrap","position","overflowY","propsTypes","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAAQC,MAAR,QAAqB,iBAArB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAIA,OAAO,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEP,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC,CAFa,CAE4B;;AACzC,QAAO,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAjC,CAHa,CAG4B;;AACzC,MAAI,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,CAAD,CAA1C,CAJa,CAIkC;AAE/C;;AACA,QAAMc,kBAAkB,GAAIC,KAAD,IAAW;AAEpC,QAAIA,KAAK,CAACC,MAAN,CAAaC,WAAb,KAA6B,aAA7B,IAA8C,YAAlD,EACER,QAAQ,CAAC,CAACD,KAAF,CAAR;AAEH,GALD,CAPa,CAab;;;AACA,QAAMU,cAAc,GAAIH,KAAD,IAAW;AAEhCJ,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAHD;AAKA;AACF;AACA;AACA;AACA;;;AACE,QAAMS,gBAAgB,GAAIC,MAAD,IAAY;AAEnCP,IAAAA,aAAa,CAACD,UAAU,GAAGQ,MAAd,CAAb;AACD,GAHD;;AAKA,MAAIC,MAAM,GAAGb,KAAK,GAChB,eADgB,GAEhB,cAFF;AAIA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACM,MAAAA,kBAAD;AAAqBN,MAAAA,KAArB;AAA4BU,MAAAA,cAA5B;AAA4CR,MAAAA,IAA5C;AAAkDS,MAAAA,gBAAlD;AAAoEP,MAAAA;AAApE,KAA5B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAES,MAAhB;AAAA,8BAEE;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,MAAM,EAAC;AAAtB,SAAb;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,KAAK,EAAE;AAACD,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,MAAM,EAAC,QAAtB;AAAgCC,UAAAA,OAAO,EAAC,KAAxC;AAA+CC,UAAAA,QAAQ,EAAC,QAAxD;AAAkEC,UAAAA,QAAQ,EAAC,UAA3E;AAAuFC,UAAAA,SAAS,EAAC;AAAjG,SAAZ;AAAA,kBACGjB,IAAI,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADX;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAK,QAAA,KAAK,EAAE;AAACY,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,MAAM,EAAE;AAAvB,SAAZ;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GArDQhB,G;;KAAAA,G;AAuDT,eAAeA,GAAf;AAEAA,GAAG,CAACqB,UAAJ,GAAiB;AACfd,EAAAA,kBAAkB,EAAEV,SAAS,CAACyB,IADf;AAEfX,EAAAA,cAAc,EAAEd,SAAS,CAACyB;AAFX,CAAjB","sourcesContent":["import React, {useState } from 'react'\nimport {Header} from './Header/Header'\nimport { Sidebar } from './Sidebar/Sidebar'\nimport {Footer} from './Footer/Footer'\n// import {WrapperTask} from './WrapperTask/WrapperTask'\nimport PropTypes from 'prop-types';\n\n\n\nexport const AppContext = React.createContext()\n\nfunction App() {\n\n  const [theme, setTheme] = useState(false)//состояние темы - режим темный/темный по умолчанию (theme=false)\n  const  [menu, setMenu] = useState(false) // состояние меню - скрыто по умолчанию (menu=false)\n  let [numberTask, setNumberTask] = useState(0); // количество задач пользователя\n\n  // отвечает за сменю надписи на button смены режима\n  const handleOnClickTheme = (event) => {\n\n    if (event.target.textContent === \"Light theme\" || \"Dark theme\" )\n      setTheme(!theme)\n\n  }\n  // показывает/закрывает панель меню\n  const handleCallMenu = (event) => {\n\n    setMenu(!menu)\n  }\n\n  /*\n   *  для меню -  выводит общее количество задач\n   *  реализую паттерн передачи данных между дочерними\n   * компонентами через общий дочерний компонент\n   */\n  const handleNumberTask = (number) => {\n\n    setNumberTask(numberTask = number);\n  }\n\n  let cssApp = theme ?\n    \"App App_Light\":\n    \"App App_Dark\"\n\n  return (\n    <AppContext.Provider value={{handleOnClickTheme, theme, handleCallMenu, menu, handleNumberTask, numberTask}}>\n      <div className={cssApp}>\n\n        <div  style={{width:\"100%\", height:\"10vh\"}}>\n          <Header />\n        </div>\n\n        <div style={{width:\"100%\", height:\"79.5vh\", padding:\"0 0\", flexWrap:\"nowrap\", position:\"relative\", overflowY:\"scroll\"}}>\n          {menu && <Sidebar/>}\n          {/* <WrapperTask /> */}\n        </div>\n\n        <div style={{width:\"100%\", height: \"10vh\"}}>\n          <Footer />\n        </div>\n      </div>\n    </AppContext.Provider>\n\n  );\n}\n\nexport default App;\n\nApp.propsTypes = {\n  handleOnClickTheme: PropTypes.func,\n  handleCallMenu: PropTypes.func,\n\n}\n"]},"metadata":{},"sourceType":"module"}