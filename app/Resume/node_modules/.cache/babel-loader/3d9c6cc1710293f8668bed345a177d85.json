{"ast":null,"code":"import _slicedToArray from\"/home/sirius/project/site/Resume/app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Header}from'./Header/Header';import{Sidebar}from'./Sidebar/Sidebar';import{Footer}from'./Footer/Footer';import PropTypes from'prop-types';import{InfoAuthor}from'./InfoAuthor/InfoAuthor';import styles from'./App.module.sass';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AppContext=/*#__PURE__*/React.createContext();function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];//состояние темы - режим темный/темный по умолчанию (theme=false)\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),menu=_useState4[0],setMenu=_useState4[1];// состояние меню - скрыто по умолчанию (menu=false)\n// infoAutor хранит в себе имя слайда для отображения\nvar _useState5=useState(\"screen\"),_useState6=_slicedToArray(_useState5,2),infoAutor=_useState6[0],setinfoAuthor=_useState6[1];// для запуска анимации при смене слайда\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),cssTrans=_useState8[0],setcssTrans=_useState8[1];// отвечает за сменю надписи на button при смене темы\nvar handleOnClickTheme=function handleOnClickTheme(event){if(event.target.textContent===\"Light theme\"||\"Dark theme\")setTheme(!theme);};// показывает/закрывает панель меню\nvar handleCallMenu=function handleCallMenu(event){setMenu(!menu);};// получает клик от ссылки (тега \"а\") из компонента List (в меню)и передает через context компоненту infoAuthor какой div отображать\nvar handleClickList=function handleClickList(event){if(event.target.tagName!==\"A\")return;setinfoAuthor(event.target.hash.slice(1));setcssTrans(!cssTrans);};var cssApp=theme?\"App App_Light\":\"App App_Dark\";return/*#__PURE__*/_jsx(AppContext.Provider,{value:{handleOnClickTheme:handleOnClickTheme,theme:theme,handleCallMenu:handleCallMenu,menu:menu,handleClickList:handleClickList,infoAutor:infoAutor,cssTrans:cssTrans},children:/*#__PURE__*/_jsxs(\"div\",{className:cssApp,children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:\"10vh\"},children:/*#__PURE__*/_jsx(Header,{})}),/*#__PURE__*/_jsxs(\"div\",{className:styles[\"App-main\"],children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(InfoAuthor,{})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:\"10vh\"},children:/*#__PURE__*/_jsx(Footer,{})})]})});}export default App;App.propsTypes={handleOnClickTheme:PropTypes.func,handleCallMenu:PropTypes.func};","map":{"version":3,"sources":["/home/sirius/project/site/Resume/app/Resume/src/App.jsx"],"names":["React","useState","Header","Sidebar","Footer","PropTypes","InfoAuthor","styles","AppContext","createContext","App","theme","setTheme","menu","setMenu","infoAutor","setinfoAuthor","cssTrans","setcssTrans","handleOnClickTheme","event","target","textContent","handleCallMenu","handleClickList","tagName","hash","slice","cssApp","width","height","propsTypes","func"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA+B,OAA/B,CACA,OAAQC,MAAR,KAAqB,iBAArB,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAAQC,MAAR,KAAqB,iBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,UAAT,KAA2B,yBAA3B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAGA,MAAO,IAAMC,CAAAA,UAAU,cAAGR,KAAK,CAACS,aAAN,EAAnB,CAEP,QAASC,CAAAA,GAAT,EAAe,CAEb,cAA0BT,QAAQ,CAAC,KAAD,CAAlC,wCAAOU,KAAP,eAAcC,QAAd,eAAyC;AAEzC,eAAyBX,QAAQ,CAAC,KAAD,CAAjC,yCAAQY,IAAR,eAAcC,OAAd,eAAyC;AAEzC;AACA,eAAmCb,QAAQ,CAAC,QAAD,CAA3C,yCAAOc,SAAP,eAAkBC,aAAlB,eAEA;AACA,eAAgCf,QAAQ,CAAC,KAAD,CAAxC,yCAAOgB,QAAP,eAAiBC,WAAjB,eAEA;AACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CAEpC,GAAIA,KAAK,CAACC,MAAN,CAAaC,WAAb,GAA6B,aAA7B,EAA8C,YAAlD,CACEV,QAAQ,CAAC,CAACD,KAAF,CAAR,CACH,CAJD,CAMA;AACA,GAAMY,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACH,KAAD,CAAW,CAChCN,OAAO,CAAC,CAACD,IAAF,CAAP,CACD,CAFD,CAIA;AACA,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACJ,KAAD,CAAW,CAEjC,GAAGA,KAAK,CAACC,MAAN,CAAaI,OAAb,GAAyB,GAA5B,CACE,OACFT,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaK,IAAb,CAAkBC,KAAlB,CAAwB,CAAxB,CAAD,CAAb,CACAT,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CAND,CAQA,GAAIW,CAAAA,MAAM,CAAGjB,KAAK,CAChB,eADgB,CAEhB,cAFF,CAIA,mBAEE,KAAC,UAAD,CAAY,QAAZ,EAAqB,KAAK,CAAE,CAACQ,kBAAkB,CAAlBA,kBAAD,CAAqBR,KAAK,CAALA,KAArB,CAA4BY,cAAc,CAAdA,cAA5B,CAA4CV,IAAI,CAAJA,IAA5C,CAAkDW,eAAe,CAAfA,eAAlD,CAAmET,SAAS,CAATA,SAAnE,CAA8EE,QAAQ,CAARA,QAA9E,CAA5B,uBACE,aAAK,SAAS,CAAEW,MAAhB,wBAEE,YAAM,KAAK,CAAE,CAACC,KAAK,CAAC,MAAP,CAAeC,MAAM,CAAC,MAAtB,CAAb,uBACE,KAAC,MAAD,IADF,EAFF,cAME,aAAK,SAAS,CAAEvB,MAAM,CAAC,UAAD,CAAtB,wBAEE,KAAC,OAAD,IAFF,cAGE,KAAC,UAAD,IAHF,GANF,cAcE,YAAK,KAAK,CAAE,CAACsB,KAAK,CAAC,MAAP,CAAeC,MAAM,CAAE,MAAvB,CAAZ,uBACE,KAAC,MAAD,IADF,EAdF,GADF,EAFF,CAwBD,CAED,cAAepB,CAAAA,GAAf,CAEAA,GAAG,CAACqB,UAAJ,CAAiB,CACfZ,kBAAkB,CAAEd,SAAS,CAAC2B,IADf,CAEfT,cAAc,CAAElB,SAAS,CAAC2B,IAFX,CAAjB","sourcesContent":["import React, {useState } from 'react'\nimport {Header} from './Header/Header'\nimport { Sidebar } from './Sidebar/Sidebar'\nimport {Footer} from './Footer/Footer'\nimport PropTypes from 'prop-types';\nimport { InfoAuthor } from './InfoAuthor/InfoAuthor';\n\nimport styles from './App.module.sass'\n\n\nexport const AppContext = React.createContext()\n\nfunction App() {\n\n  const [theme, setTheme] = useState(false)//состояние темы - режим темный/темный по умолчанию (theme=false)\n\n  const  [menu, setMenu] = useState(false) // состояние меню - скрыто по умолчанию (menu=false)\n\n  // infoAutor хранит в себе имя слайда для отображения\n  const [infoAutor, setinfoAuthor] = useState(\"screen\");\n\n  // для запуска анимации при смене слайда\n  const [cssTrans, setcssTrans] = useState(false);\n\n  // отвечает за сменю надписи на button при смене темы\n  const handleOnClickTheme = (event) => {\n\n    if (event.target.textContent === \"Light theme\" || \"Dark theme\" )\n      setTheme(!theme)\n  }\n\n  // показывает/закрывает панель меню\n  const handleCallMenu = (event) => {\n    setMenu(!menu)\n  }\n\n  // получает клик от ссылки (тега \"а\") из компонента List (в меню)и передает через context компоненту infoAuthor какой div отображать\n  const handleClickList = (event) => {\n\n    if(event.target.tagName !== \"A\")\n      return;\n    setinfoAuthor(event.target.hash.slice(1));\n    setcssTrans(!cssTrans);\n  }\n\n  let cssApp = theme ?\n    \"App App_Light\":\n    \"App App_Dark\"\n\n  return (\n\n    <AppContext.Provider value={{handleOnClickTheme, theme, handleCallMenu, menu, handleClickList, infoAutor, cssTrans}}>\n      <div className={cssApp}>\n\n        <div  style={{width:\"100%\", height:\"10vh\"}}>\n          <Header />\n        </div>\n\n        <div className={styles[\"App-main\"]}>\n\n          <Sidebar/>\n          <InfoAuthor/>\n\n        </div>\n\n\n        <div style={{width:\"100%\", height: \"10vh\"}}>\n          <Footer />\n        </div>\n      </div>\n    </AppContext.Provider>\n\n  );\n}\n\nexport default App;\n\nApp.propsTypes = {\n  handleOnClickTheme: PropTypes.func,\n  handleCallMenu: PropTypes.func,\n\n}\n"]},"metadata":{},"sourceType":"module"}