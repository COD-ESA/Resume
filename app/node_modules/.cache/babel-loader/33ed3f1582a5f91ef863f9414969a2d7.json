{"ast":null,"code":"var _jsxFileName = \"/home/sirius/project/site/Resume/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import {Transition} from 'react-transition-group';\n// import {CSSTransition} from 'react-transition-group';\n// import {TransitionGroup} from 'react-transition-group';\n\nimport { Header } from './Header/Header';\nimport { Sidebar } from './Sidebar/Sidebar';\nimport { Ajax } from './ajax/Ajax';\nimport { Footer } from './Footer/Footer';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState(false); //состояние темы - режим темный/темный по умолчанию (theme=false)\n\n  const [menu, setMenu] = useState(false); // состояние меню - скрыто по умолчанию (menu=false)\n  // отвечает за сменю надписи на button при смене темы\n\n  const handleOnClickTheme = event => {\n    if (event.target.textContent === \"Light theme\" || \"Dark theme\") setTheme(!theme);\n  }; // показывает/закрывает панель меню\n\n\n  const handleCallMenu = event => {\n    setMenu(!menu);\n  };\n\n  let cssApp = theme ? \"App App_Light\" : \"App App_Dark\";\n  console.log(menu);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      handleOnClickTheme,\n      theme,\n      handleCallMenu,\n      menu\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cssApp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"10vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"79.5vh\",\n          padding: \"0 0\",\n          flexWrap: \"nowrap\",\n          position: \"relative\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"10vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ksKPQStQKcc1ySrP47t1SPfptwI=\");\n\n_c = App;\nexport default App;\nApp.propsTypes = {\n  handleOnClickTheme: PropTypes.func,\n  handleCallMenu: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sirius/project/site/Resume/app/src/App.js"],"names":["React","useState","Header","Sidebar","Ajax","Footer","PropTypes","AppContext","createContext","App","theme","setTheme","menu","setMenu","handleOnClickTheme","event","target","textContent","handleCallMenu","cssApp","console","log","width","height","padding","flexWrap","position","propsTypes","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B,C,CACA;AACA;AACA;;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAAQC,IAAR,QAAmB,aAAnB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAIA,OAAO,MAAMC,UAAU,gBAAGP,KAAK,CAACQ,aAAN,EAAnB;;AAEP,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC,CAFa,CAE4B;;AACzC,QAAO,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAjC,CAHa,CAG4B;AAEzC;;AACA,QAAMa,kBAAkB,GAAIC,KAAD,IAAW;AAEpC,QAAIA,KAAK,CAACC,MAAN,CAAaC,WAAb,KAA6B,aAA7B,IAA8C,YAAlD,EACEN,QAAQ,CAAC,CAACD,KAAF,CAAR;AAEH,GALD,CANa,CAYb;;;AACA,QAAMQ,cAAc,GAAIH,KAAD,IAAW;AAEhCF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAHD;;AAKA,MAAIO,MAAM,GAAGT,KAAK,GAChB,eADgB,GAEhB,cAFF;AAGAU,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEA,sBAEE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACE,MAAAA,kBAAD;AAAqBJ,MAAAA,KAArB;AAA4BQ,MAAAA,cAA5B;AAA4CN,MAAAA;AAA5C,KAA5B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEO,MAAhB;AAAA,8BAEE;AAAM,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,MAAM,EAAC;AAAtB,SAAb;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,KAAK,EAAE;AAACD,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,MAAM,EAAC,QAAtB;AAAgCC,UAAAA,OAAO,EAAC,KAAxC;AAA+CC,UAAAA,QAAQ,EAAC,QAAxD;AAAkEC,UAAAA,QAAQ,EAAC;AAA3E,SAAZ;AAAA,+BAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cANF,eAYE;AAAK,QAAA,KAAK,EAAE;AAACJ,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,MAAM,EAAE;AAAvB,SAAZ;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAsBD;;GA7CQd,G;;KAAAA,G;AA+CT,eAAeA,GAAf;AAEAA,GAAG,CAACkB,UAAJ,GAAiB;AACfb,EAAAA,kBAAkB,EAAER,SAAS,CAACsB,IADf;AAEfV,EAAAA,cAAc,EAAEZ,SAAS,CAACsB;AAFX,CAAjB","sourcesContent":["import React, {useState } from 'react'\n// import {Transition} from 'react-transition-group';\n// import {CSSTransition} from 'react-transition-group';\n// import {TransitionGroup} from 'react-transition-group';\nimport {Header} from './Header/Header'\nimport { Sidebar } from './Sidebar/Sidebar'\nimport {Ajax} from './ajax/Ajax'\nimport {Footer} from './Footer/Footer'\nimport PropTypes from 'prop-types';\n\n\n\nexport const AppContext = React.createContext()\n\nfunction App() {\n\n  const [theme, setTheme] = useState(false)//состояние темы - режим темный/темный по умолчанию (theme=false)\n  const  [menu, setMenu] = useState(false) // состояние меню - скрыто по умолчанию (menu=false)\n\n  // отвечает за сменю надписи на button при смене темы\n  const handleOnClickTheme = (event) => {\n\n    if (event.target.textContent === \"Light theme\" || \"Dark theme\" )\n      setTheme(!theme)\n\n  }\n  // показывает/закрывает панель меню\n  const handleCallMenu = (event) => {\n\n    setMenu(!menu)\n  }\n\n  let cssApp = theme ?\n    \"App App_Light\":\n    \"App App_Dark\"\n  console.log(menu);\n\n  return (\n\n    <AppContext.Provider value={{handleOnClickTheme, theme, handleCallMenu, menu}}>\n      <div className={cssApp}>\n\n        <div  style={{width:\"100%\", height:\"10vh\"}}>\n          <Header />\n        </div>\n\n        <div style={{width:\"100%\", height:\"79.5vh\", padding:\"0 0\", flexWrap:\"nowrap\", position:\"relative\"}}>\n\n          <Sidebar/>\n\n        </div>\n\n        <div style={{width:\"100%\", height: \"10vh\"}}>\n          <Footer />\n        </div>\n      </div>\n    </AppContext.Provider>\n\n  );\n}\n\nexport default App;\n\nApp.propsTypes = {\n  handleOnClickTheme: PropTypes.func,\n  handleCallMenu: PropTypes.func,\n\n}\n"]},"metadata":{},"sourceType":"module"}